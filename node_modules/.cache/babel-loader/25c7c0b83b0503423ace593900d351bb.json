{"ast":null,"code":"var _jsxFileName = \"/Users/hkobashi/study/react-basic/src/components/Memo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Memo = () => {\n  _s();\n\n  const [count1, setCount1] = useState(0);\n  const [count2, setCount2] = useState(0);\n\n  const AddCount1 = () => {\n    setCount1(prevCount1 => prevCount + 1);\n  };\n\n  const AddCount2 = () => {\n    setCount2(prevCount2 => prevCount + 1);\n  };\n\n  const isOdd = () => {\n    let i = 0;\n\n    while (i < 500000000) i++;\n\n    return count1 % 2 !== 0;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddCount1,\n      children: [\"Count1: \", count1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: isOdd() ? '0dd number' : 'Even number'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: AddCount2,\n      children: [\"Count2: \", count2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Memo, \"Au8fyW5wzjHClKn3HRlUVv4pnjI=\");\n\n_c = Memo;\nexport default Memo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Memo\");","map":{"version":3,"sources":["/Users/hkobashi/study/react-basic/src/components/Memo.js"],"names":["React","useState","useMemo","Memo","count1","setCount1","count2","setCount2","AddCount1","prevCount1","prevCount","AddCount2","prevCount2","isOdd","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,OAAzB,QAAuC,OAAvC;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAApC;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACtBH,IAAAA,SAAS,CAACI,UAAU,IAAIC,SAAS,GAAE,CAA1B,CAAT;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBJ,IAAAA,SAAS,CAACK,UAAU,IAAIF,SAAS,GAAE,CAA1B,CAAT;AACD,GAFD;;AAIA,QAAMG,KAAK,GAAG,MAAM;AAClB,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAMA,CAAC,GAAG,SAAV,EACAA,CAAC;;AACD,WAAOV,MAAM,GAAG,CAAT,KAAe,CAAtB;AACD,GALD;;AAOA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEI,SAAjB;AAAA,6BAAqCJ,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAOS,KAAK,KAAK,YAAL,GAAoB;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEF,SAAjB;AAAA,6BAAqCL,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA1BD;;GAAMH,I;;KAAAA,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React, {useState, useMemo} from 'react'\n\nconst Memo = () => {\n  const [count1, setCount1] = useState(0)\n  const [count2, setCount2] = useState(0)\n\n  const AddCount1 = () => {\n    setCount1(prevCount1 => prevCount +1)\n  }\n\n  const AddCount2 = () => {\n    setCount2(prevCount2 => prevCount +1)\n  }\n  \n  const isOdd = () => {\n    let i = 0\n    while(i < 500000000)\n    i++\n    return count1 % 2 !== 0\n  }\n\n  return (\n    <div>\n      <button onClick={AddCount1}>Count1: {count1}</button>\n      <span>{isOdd() ? '0dd number' : 'Even number'}</span>\n      <button onClick={AddCount2}>Count2: {count2}</button>\n    </div>\n  )\n}\n\nexport default Memo\n"]},"metadata":{},"sourceType":"module"}